{"version":3,"file":"static/js/286.298ecbac.chunk.js","mappings":"mUAEaA,EAAgBC,EAAAA,GAAAA,GAAH,sIAQbC,EAAWD,EAAAA,GAAAA,GAAH,8EAKRE,EAAYF,EAAAA,GAAAA,IAAH,4DAITG,EAAYH,EAAAA,GAAAA,EAAH,iEAITI,EAAgBJ,EAAAA,GAAAA,EAAH,iEAKbK,EAASL,EAAAA,GAAAA,EAAH,gE,4FC1BNM,EAAWN,EAAAA,GAAAA,IAAH,uIASRO,EAAUP,EAAAA,GAAAA,IAAH,+G,SCRPQ,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAACC,EAAD,WACE,SAAC,KAAD,CACEE,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,iBACVC,aAAc,CAAEC,OAAQ,QACxBC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,gBAK9D,C,kLChBYC,EAAkBjB,EAAAA,GAAAA,GAAH,wBAEfkB,EAAalB,EAAAA,GAAAA,GAAH,wBAEVmB,EAAenB,EAAAA,GAAAA,EAAH,iEAIZoB,EAAgBpB,EAAAA,GAAAA,EAAH,iE,mBC2C1B,EA1CgB,WACd,OAA8BqB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAW,GAFf,UAG2BE,EAAAA,EAAAA,IAAgBC,OAAOR,IAHlD,QAGUS,EAHV,QAKkBC,QACZP,EAAa,wCAEfJ,EAAWU,EAASE,SARxB,gDAUIC,QAAQC,IAAI,KAAMC,SAVtB,yBAYIT,GAAW,GAZf,6EADc,uBAAC,WAAD,wBAgBdU,EACD,GAAE,CAACf,KAGF,UAACP,EAAD,YACIK,EAAQY,SAAU,SAAC,KAAD,UAASR,IAE5BJ,EAAQkB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACzB,EAAD,YACE,UAACC,EAAD,WAAc,WAASuB,MACvB,SAACtB,EAAD,UAAgBuB,MAFDF,EAKpB,IACAb,IAAW,SAACpB,EAAA,EAAD,MAGjB,C,mMClDKoC,EAAW,gCAEJC,EAAS,mCAAG,sGACAC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,8DADA,cACjBX,EADiB,OAIjBc,EAAOd,EAASc,KAJC,kBAMhBA,GANgB,2CAAH,qDASTC,EAAY,mCAAG,WAAMP,GAAN,yFACHK,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDH,EADC,8CADG,cACpBR,EADoB,OAIpBc,EAAOd,EAASc,KAJI,kBAKnBA,GALmB,2CAAH,sDAQZE,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,8BACYM,EADZ,8CADK,cACtBjB,EADsB,OAItBc,EAAOd,EAASc,KAJM,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAY,mCAAG,WAAMV,GAAN,yFACHK,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDH,EADC,sDADG,cACpBR,EADoB,OAIpBc,EAAOd,EAASc,KAJI,kBAKnBA,GALmB,2CAAH,sDAQZhB,EAAe,mCAAG,WAAMU,GAAN,yFACNK,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDH,EADC,sDADM,cACvBR,EADuB,OAIvBc,EAAOd,EAASc,KAJO,kBAKtBA,GALsB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Rewiews/Rewiews.styled.js","components/Rewiews/Rewiews.jsx","servises/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const CastItem = styled.li`\nwidth: 200px;\n  height: 500px;\n  overflow: hidden;\n`;\nexport const CastPhoto = styled.img`\n  display: block;\n  width: 200px;\n`;\nexport const CastTitle = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n`;\nexport const CastCharacter = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const NoCast = styled.p`\n  font-size: 22px;\n  font-weight: 500;\n`;","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Backdrop, Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Backdrop>\n      <Wrapper>\n        <MagnifyingGlass\n          visible={true}\n          height=\"120\"\n          width=\"120\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ margin: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      </Wrapper>\n    </Backdrop>\n  );\n};\n\n","import styled from \"styled-components\";\n\n\nexport const ReviewContainer = styled.ul`\n`\nexport const ReviewItem = styled.li`\n`\nexport const ReviewAuthor = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n`;\nexport const ReviewContent = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n`;","import { NoCast } from 'components/Cast/Cast.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'servises/getMovies';\nimport {\n  ReviewAuthor,\n  ReviewContainer,\n  ReviewContent,\n  ReviewItem,\n} from './Rewiews.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [noReviews, setNoReviews] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchReviewsById() {\n      try {\n        setLoading(true);\n        const response = await getMovieReviews(Number(movieId));\n\n        if (!response.length) {\n          setNoReviews(`Unfortunately, there are no reviews!`);\n        }\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchReviewsById();\n  }, [movieId]);\n\n  return (\n    <ReviewContainer>\n      {!reviews.length && <NoCast>{noReviews}</NoCast>}\n\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <ReviewItem key={id}>\n            <ReviewAuthor>Author: {author}</ReviewAuthor>\n            <ReviewContent>{content}</ReviewContent>\n          </ReviewItem>\n        );\n      })}\n      {loading && <Loader />}\n    </ReviewContainer>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieByName = async request => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${request}&api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["CastContainer","styled","CastItem","CastPhoto","CastTitle","CastCharacter","NoCast","Backdrop","Wrapper","Loader","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","colors","ReviewContainer","ReviewItem","ReviewAuthor","ReviewContent","useState","reviews","setReviews","movieId","useParams","noReviews","setNoReviews","loading","setLoading","useEffect","getMovieReviews","Number","response","length","results","console","log","message","fetchReviewsById","map","id","author","content","BASE_URL","getMovies","axios","data","getMovieById","getMovieByName","request","getMovieCast"],"sourceRoot":""}