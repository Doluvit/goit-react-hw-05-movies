{"version":3,"file":"static/js/81.234ff6f4.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/TrendingMoviesList.styled.js","components/Movies/RequestMoviesList.styled.js","components/Movies/RequestMoviesList.jsx","pages/Movies.jsx","servises/getMovies.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Backdrop, Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Backdrop>\n      <Wrapper>\n        <MagnifyingGlass\n          visible={true}\n          height=\"120\"\n          width=\"120\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ margin: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      </Wrapper>\n    </Backdrop>\n  );\n};\n\n","import styled from 'styled-components';\n\n\nexport const MovieTittle = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  color: #3f51b5;\n  transition: color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  :hover {\n    color: #fff;\n    box-shadow: inset 400px 0 0 0 #54b3d6;\n  }\n`;\n\nexport const MovieListHeader = styled.p`\n  margin-left: 40px;\n  font-size: 28px;\n  font-weight: 700;\n  color: #3f51b5;\n`;\n\nexport const MovieList = styled.ul`\n  padding-left: 40px;\n`;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  margin-left: 40px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: #3f51b5;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n    color: #fff;\n  }\n`;\nexport const SearchFormButtonLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  :focus {\n    outline: none;\n  }\n\n  :placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 28px;\n  font-weight: 700;\n  color: #3f51b5;\n`;","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovieByName } from 'servises/getMovies';\n\nimport {\n  ErrorMessage,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './RequestMoviesList.styled';\nimport {\n  MovieList,\n  MovieTittle,\n} from 'components/MoviesList/TrendingMoviesList.styled';\n\nconst RequestMoviesList = () => {\n  const [request, setRequest] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasFetchedData, setHasFetchedData] = useState(false);\n  const [filmQuery, setfilmQuery] = useSearchParams();\n  const query = filmQuery.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMoviesByName = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovieByName(query);\n        const data = response.results;\n\n        setRequest(data);\n        setHasFetchedData(true);\n      } catch (error) {\n        toast.error('Sorry, no films found on your request!');\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (query !== '') {\n      fetchMoviesByName();\n    }\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const requestData = form.elements.name.value;\n    if (requestData.trim() === '') {\n      toast.error('Please, input your request!');\n      return;\n    }\n    setfilmQuery({ query: requestData });\n     setHasFetchedData(false);\n    form.reset();\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <ImSearch />\n          <SearchFormButtonLabel></SearchFormButtonLabel>\n        </SearchFormButton>\n        <SearchFormInput\n          type=\"text\"\n          autocomplete=\"off\"\n          placeholder=\"Search...\"\n          name=\"name\"\n        />\n      </SearchForm>\n      <MovieList>\n        {!hasFetchedData && loading && <Loader />}\n        {hasFetchedData && request.length === 0 && (\n          <ErrorMessage>No films found on your request!</ErrorMessage>\n        )}\n        {hasFetchedData &&\n          request.map(({ title, id }) => {\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  <MovieTittle>{title}</MovieTittle>\n                </Link>\n              </li>\n            );\n          })}\n        {loading && <Loader />}\n      </MovieList>\n    </>\n  );\n};\n\nexport default RequestMoviesList;\n","import RequestMoviesList from 'components/Movies/RequestMoviesList';\n\nconst Movies = () => {\n  return <RequestMoviesList />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieByName = async request => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${request}&api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["Backdrop","styled","Wrapper","Loader","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","colors","MovieTittle","MovieListHeader","MovieList","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","ErrorMessage","useState","request","setRequest","loading","setLoading","hasFetchedData","setHasFetchedData","useSearchParams","filmQuery","setfilmQuery","query","get","location","useLocation","useEffect","fetchMoviesByName","getMovieByName","response","data","results","toast","console","log","onSubmit","event","preventDefault","form","currentTarget","requestData","elements","name","value","trim","reset","type","autocomplete","placeholder","length","map","title","id","to","state","from","BASE_URL","getMovies","axios","getMovieById","getMovieCast","getMovieReviews"],"sourceRoot":""}