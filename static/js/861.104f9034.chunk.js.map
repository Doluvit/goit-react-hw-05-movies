{"version":3,"file":"static/js/861.104f9034.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","servises/getMovies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { getMovieCast } from 'servises/getMovies';\nimport CastServisePicture from '../../servises/CastServisePicture.png';\n\nimport {\n  CastContainer,\n  CastItem,\n  CastPhoto,\n  CastTitle,\n  CastCharacter,\n  NoCast,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n  const [noCast, setNoCast] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCastById() {\n      try {\n        setLoading(true);\n        const response = await getMovieCast(Number(movieId));\n\n        if (!response.length) {\n          setNoCast(`Unfortunately, the list of actors is not yet available!`);\n        }\n        setCastInfo(response.cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchCastById();\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {!castInfo.length && <NoCast>{noCast}</NoCast>}\n\n      {castInfo.map(({ id, profile_path, original_name, character }) => {\n        if (profile_path) {\n          return (\n            <CastItem key={id}>\n              <CastPhoto\n                src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                alt={original_name}\n              />\n              <CastTitle>{original_name}</CastTitle>\n              <CastCharacter>Character: {character}</CastCharacter>\n            </CastItem>\n          );\n        } else {\n          return (\n            <CastItem key={id}>\n              <CastPhoto src={CastServisePicture} alt={original_name} />\n              <CastTitle>{original_name}</CastTitle>\n              <CastCharacter>Character: {character}</CastCharacter>\n            </CastItem>\n          );\n        }\n      })}\n      {loading && <Loader />}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const CastItem = styled.li`\nwidth: 200px;\n  height: 500px;\n  overflow: hidden;\n`;\nexport const CastPhoto = styled.img`\n  display: block;\n  width: 200px;\n`;\nexport const CastTitle = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n`;\nexport const CastCharacter = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const NoCast = styled.p`\n  font-size: 22px;\n  font-weight: 500;\n`;","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Backdrop, Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Backdrop>\n      <Wrapper>\n        <MagnifyingGlass\n          visible={true}\n          height=\"120\"\n          width=\"120\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ margin: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      </Wrapper>\n    </Backdrop>\n  );\n};\n\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieByName = async request => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${request}&api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["useState","castInfo","setCastInfo","noCast","setNoCast","loading","setLoading","movieId","useParams","useEffect","getMovieCast","Number","response","length","cast","console","log","message","fetchCastById","map","id","profile_path","original_name","character","src","alt","CastServisePicture","Loader","CastContainer","styled","CastItem","CastPhoto","CastTitle","CastCharacter","NoCast","Backdrop","Wrapper","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","colors","BASE_URL","getMovies","axios","data","getMovieById","getMovieByName","request","getMovieReviews"],"sourceRoot":""}