{"version":3,"file":"static/js/549.7820677f.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","servises/getMovies.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Backdrop, Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Backdrop>\n      <Wrapper>\n        <MagnifyingGlass\n          visible={true}\n          height=\"120\"\n          width=\"120\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ margin: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      </Wrapper>\n    </Backdrop>\n  );\n};\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nexport const Section = styled.section`\npadding: 0 40px;\n`\n\nexport const LinkButton = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  width: 100px;\n  margin-bottom: 15px;\n  color: #3f31b5;\n  font-weight: 700;\n  font-size: 18px;\n  transition: all 0.2s ease;\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const FilmContainer = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const GenresContainer = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const AddInfo = styled.p`\n  font-size: 28px;\n  font-weight: 700;\n\n`;\n\nexport const AddInfoList = styled.ul`\ndisplay: flex;\nflex-direction: column;\njustify-content: flex-start;\n\n`\n\nexport const AddInfoItem = styled(Link)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 10px;\n  width: 100px;\n  margin-bottom: 15px;\n  color: #3f31b5;\n  font-weight: 700;\n  font-size: 18px;\n  transition: all 0.2s ease;\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\n\nexport const HorizontalLine = styled.hr`\n  border: 0;\n  height: 2px;\n  margin: 30px 0;\n  background-image: linear-gradient(\n    to right,\n    #3f51b5 50%,\n    #337ab7 50%,\n    #337ab7 60%,\n    #ff9100 60%,\n    #ff9100 70%,\n    #05b5e6 70%,\n    #05b5e6 80%,\n    #b448b8 80%,\n    #b448b8 90%,\n    #bfe2ff 90%,\n    #bfe2ff 100%\n  );\n`;","import { Suspense, useRef } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nimport routes from 'servises/routes';\nimport {\n  Section,\n  LinkButton,\n  FilmContainer,\n  GenresContainer,\n  AddInfo,\n  AddInfoList,\n  AddInfoItem,\n  HorizontalLine,\n} from './MovieInfo.styled';\n\n\nconst MovieInfo = ({ movieInfo }) => {\n  const location = useLocation();\n  const buttonGoBack = useRef(location.state?.from ?? '/');\n   const { title, vote_average, overview, poster_path, release_date, genres } =\n    movieInfo;\n\n  if (!genres) return;\n  const genresList = genres.map(genre => (\n    <li key={genre.id}>\n      <p>{genre.name}</p>\n    </li>\n  ));\n  \n  return (\n    <Section>\n      <LinkButton to={buttonGoBack.current}>\n        <FaLongArrowAltLeft />\n        Go back\n      </LinkButton>\n\n      <div>\n        <FilmContainer>\n          <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt=\"\" />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User Score: {(vote_average * 10).toFixed()}%</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <GenresContainer>{genresList}</GenresContainer>\n          </div>\n        </FilmContainer>\n      </div>\n      <HorizontalLine />\n      <div>\n        <AddInfo>Additional information</AddInfo>\n        <AddInfoList>\n          <li>\n            <AddInfoItem to={routes.CAST} state={{ from: location }}>\n              Cast\n            </AddInfoItem>\n          </li>\n          <li>\n            <AddInfoItem to={routes.REVIEWS}>Reviews</AddInfoItem>\n          </li>\n        </AddInfoList>\n      </div>\n      <HorizontalLine />\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n};\n\nexport default MovieInfo;\n\nMovieInfo.propTypes = {\n  movieInfo: PropTypes.object,\n};","import { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { getMovieById } from 'servises/getMovies';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const location = useLocation();\n   const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieById() {\n      try {\n        setLoading(true)\n        const response = await getMovieById(Number(movieId));\n        setMovieInfo(response);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false)\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n\n\n return (\n   <>\n     {movieInfo && <MovieInfo movieInfo={movieInfo} location={location} />}\n     {loading && <Loader />}\n   </>\n );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieByName = async request => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${request}&api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=485db8c64742926ad3904264dbc73b05`\n  );\n  const data = response.data;\n  return data;\n};\n"],"names":["Backdrop","styled","Wrapper","Loader","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","colors","Section","LinkButton","Link","FilmContainer","GenresContainer","AddInfo","AddInfoList","AddInfoItem","HorizontalLine","movieInfo","location","useLocation","buttonGoBack","useRef","state","from","title","vote_average","overview","poster_path","release_date","genres","genresList","map","genre","name","id","to","current","src","alt","slice","toFixed","routes","Suspense","fallback","useState","setMovieInfo","loading","setLoading","movieId","useParams","useEffect","getMovieById","Number","response","console","log","fetchMovieById","BASE_URL","getMovies","axios","data","getMovieByName","request","getMovieCast","getMovieReviews"],"sourceRoot":""}